{"version":3,"sources":["theme/theme.js","components/Header/index.js","components/SearchBar/index.js","components/Job/JobCard.js","components/Job/NewJobModal.js","components/Job/ViewJobModal.js","firebase/config.js","App.js","index.js"],"names":["createMuiTheme","typography","fontFamily","palette","primary","main","secondary","overrides","MuiDialogActions","root","padding","MuiButton","fontWeight","textTransform","color","outlined","borderRadius","borderColor","MuiSelect","filled","MuiFilledInput","input","height","props","Box","py","bgcolor","Grid","container","justify","item","xs","display","justifyContent","Typography","variant","Button","onClick","openNewJobModal","disableElevation","useStyles","makeStyles","wrapper","backgroundColor","boxShadow","flex","margin","classes","useState","loading","setLoading","type","location","jobSearch","setJobSearch","handleChange","e","persist","oldState","target","name","value","search","a","fetchJobsCustom","p","mt","mb","className","Select","onChange","disableUnderline","MenuItem","disabled","CircularProgress","size","theme","border","cursor","transition","borderLeft","companyName","fontSize","spacing","skillChip","alignItems","title","skills","map","skill","key","direction","differenceInMinutes","Date","now","postedOn","open","included","initState","companyUrl","link","description","jobDetails","setJobDetails","handleSubmit","field","length","postJob","setTimeout","closeModal","Dialog","newJobModal","fullWidth","DialogTitle","IconButton","Close","DialogContent","FilledInput","autoComplete","placeholder","multiline","rows","includes","filter","s","concat","addRemoveSkill","DialogActions","width","info","Object","keys","job","format","component","href","firestore","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","jobs","setJobs","customSearch","setCustomSearch","setNewJobModal","viewJob","setViewJob","fetchJobs","collection","orderBy","get","req","tempJobs","docs","data","id","toDate","where","add","FieldValue","serverTimestamp","useEffect","ThemeProvider","Header","ViewJobModal","SearchBar","my","JobCard","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.b01ef4c6.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\n\nconst primary = \"#18E1D9\";\nconst secondary = \"#0B0B15\";\n\nexport default createMuiTheme({\n  typography: {\n    fontFamily: \"Poppins, sans-serif\",\n  },\n  palette: {\n    primary: {\n      main: primary,\n    },\n    secondary: {\n      main: secondary,\n    },\n  },\n  overrides: {\n    MuiDialogActions: {\n      root: {\n        padding: \"8px 24px 16px 24px\",\n      },\n    },\n    MuiButton: {\n      root: {\n        fontWeight: 600,\n        textTransform: \"none\",\n        color: secondary,\n        padding: \"6px 24px\",\n      },\n      outlined: {\n        borderRadius: \"35px\",\n        borderColor: secondary,\n        padding: \"6px 20px\",\n      },\n    },\n    MuiSelect: {\n      filled: {\n        padding: \"15px 0 15px 15px\",\n      },\n    },\n    MuiFilledInput: {\n      input: {\n        height: \"49px\",\n        padding: \"0px 0 0 10px\",\n      },\n    },\n  },\n});\n","import React from 'react';\nimport { Box, Grid, Typography, Button } from '@material-ui/core';\n\nexport default (props) => (\n  <Box py={10} bgcolor='secondary.main' color='white'>\n    <Grid container justify='center'>\n      <Grid item xs={10}>\n        <Box display='flex' justifyContent='space-between'>\n          <Typography variant=\"h5\">Opening Job Listing</Typography>\n          <Button onClick={props.openNewJobModal} variant='contained' color='primary' disableElevation>\n            Post a job\n          </Button>\n        </Box>\n      </Grid>\n    </Grid>\n  </Box>\n);\n","import React, { useState } from 'react';\nimport { Box, Button, Select, MenuItem, makeStyles, CircularProgress } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  wrapper: {\n    backgroundColor: '#fff',\n    display: 'flex',\n    boxShadow: '0px 1px 5px rgba(0, 0, 0, 0.1)',\n    borderRadius: '5px',\n    '& > *': {\n      flex: 1,\n      height: '45px',\n      margin: '8px'\n    },\n  },\n})\n\nexport default (props) => {\n  const classes = useStyles()\n  const [ loading, setLoading ] = useState(false);\n  const [ jobSearch, setJobSearch ] = useState({type: 'Full time', location: 'Remote'})\n\n  const handleChange = e => {\n    e.persist();\n    setJobSearch(oldState => ({ ...oldState, [e.target.name]: e.target.value }))\n  }\n\n  const search = async () => {\n    setLoading(true);\n    await props.fetchJobsCustom(jobSearch);\n    setLoading(false);\n  }\n\n  return (\n    <Box p={2} mt={-5} mb={2} className={classes.wrapper}>\n      <Select onChange={handleChange} value={jobSearch.type} name='type' variant='filled' disableUnderline>\n        <MenuItem value='Full time'>Full time</MenuItem>\n        <MenuItem value='Part time'>Part time</MenuItem>\n        <MenuItem value='Contact'>Contact</MenuItem>\n      </Select>\n      <Select onChange={handleChange} value={jobSearch.location} name='location' variant='filled' disableUnderline>\n        <MenuItem value='Remote'>Remote</MenuItem>\n        <MenuItem value='In-office'>In-office</MenuItem>\n      </Select>\n      <Button\n        onClick={search}\n        disabled={loading}\n        variant='contained'\n        color='primary'\n        disableElevation>\n      { loading\n        ?\n        <CircularProgress color='secondary' size={22} />\n        :\n        'Search'\n      }\n      </Button>\n    </Box>\n  )\n}\n","import React from 'react';\nimport { Box, Grid, Typography, Button, makeStyles } from '@material-ui/core';\nimport { differenceInMinutes } from 'date-fns';\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    border: '1px solid #e8e8e8',\n    cursor: 'pointer',\n    transition: '.3s',\n\n    '&:hover': {\n      boxShadow: '0px 5px 25px rgba(0, 0, 0, 0.1)',\n      borderLeft: '6px solid #4D64E4'\n    }\n  },\n  companyName: {\n    fontSize: '13.5px',\n    backgroundColor: theme.palette.primary.main,\n    padding: theme.spacing(0.75),\n    borderRadius: '5px',\n    display: 'inline-block',\n    fontWeight: 600\n  },\n  skillChip: {\n    margin: theme.spacing(0.5),\n    padding: theme.spacing(0.75),\n    fontSize: '14.5px',\n    borderRadius: '5px',\n    fontWeight: 600,\n    backgroundColor: theme.palette.secondary.main,\n    color: '#fff'\n  }\n}))\n\n\nexport default (props) => {\n  const classes = useStyles();\n  return (\n    <Box p={2} className={classes.wrapper}>\n      <Grid container alignItems='center'>\n        <Grid item xs>\n          <Typography variant='subtitle1'>{props.title}</Typography>\n          <Typography className={classes.companyName} variant='subtitle1'>{props.companyName}</Typography>\n        </Grid>\n        <Grid item container xs>\n          {props.skills.map(skill => (\n            <Grid key={skill} className={classes.skillChip} item>\n              {skill}\n            </Grid>)\n\n          )}\n\n        </Grid>\n        <Grid item container direction='column' alignItems='flex-end' xs>\n          <Grid item>\n            <Typography variant='caption'>\n              {differenceInMinutes(Date.now(), props.postedOn)} | {props.type} | {props.location}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Box mt={2}>\n              <Button onClick={props.open} variant='outlined'>Check</Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  CircularProgress,\n  Button,\n  IconButton,\n  makeStyles,\n  Box,\n  Grid,\n  FilledInput,\n  Select,\n  MenuItem,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Typography } from '@material-ui/core';\nimport { Close as CloseIcon } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n  skillChip: {\n    margin: theme.spacing(0.5),\n    padding: theme.spacing(0.75),\n    fontSize: '14.5px',\n    borderRadius: '5px',\n    fontWeight: 600,\n    border: `1px solid ${theme.palette.secondary.main}`,\n    color: theme.palette.secondary.main,\n    cursor: 'pointer',\n\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.main,\n      color: '#fff'\n    }\n  },\n  included: {\n    backgroundColor: theme.palette.secondary.main,\n    color: '#fff'\n  }\n}))\n\nconst initState = {\n  title: '',\n  type: 'Full time',\n  companyName: '',\n  companyUrl: '',\n  location: 'Remote',\n  link: '',\n  description: '',\n  skills: []\n}\n\nexport default (props) => {\n  const [ loading, setLoading ] = useState(false);\n  const [ jobDetails, setJobDetails ] = useState(initState);\n\n  const handleChange = e => {\n    e.persist();\n    setJobDetails(oldState => ({ ...oldState, [e.target.name]: e.target.value }))\n  }\n\n  const addRemoveSkill = skill => {\n    jobDetails.skills.includes(skill)\n    ?\n    setJobDetails(oldState => ({ ...oldState, skills: oldState.skills.filter(s => s !== skill) }))\n    :\n    setJobDetails(oldState => ({ ...oldState, skills: oldState.skills.concat(skill) }))\n  }\n\n  const handleSubmit = async () => {\n    for (const field in jobDetails) {\n      if (typeof jobDetails[field] === 'string' && !jobDetails[field]) return;\n    }\n    if (!jobDetails.skills.length) return;\n\n    setLoading(true)\n    await props.postJob(jobDetails);\n    setTimeout(() => closeModal(), 700)\n  }\n\n  const closeModal = () => {\n    setJobDetails(initState)\n    setLoading(false)\n    props.closeModal()\n  }\n\n  const skills = [\n    'JavaScript',\n    'React',\n    'Node',\n    'Vue',\n    'Firebase',\n    'MongoDB',\n    'SQL'\n  ]\n\n  const classes = useStyles();\n  return (\n    <Dialog open={props.newJobModal} fullWidth>\n      <DialogTitle>\n        <Box display='flex' justifyContent='space-between' alignItems='center'>\n          Post Job\n          <IconButton onClick={closeModal}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </DialogTitle>\n      <DialogContent>\n        <Grid spacing={2} container>\n\n          <Grid item xs={6}>\n            <FilledInput\n              onChange={handleChange}\n              name='title'\n              value={jobDetails.title}\n              autoComplete='off'\n              fullWidth placeholder='Job title'\n              disableUnderline />\n          </Grid>\n\n          <Grid item xs={6}>\n            <Select\n              onChange={handleChange}\n              name='type'\n              value={jobDetails.type}\n              fullWidth\n              variant='filled'\n              disableUnderline>\n                <MenuItem value='Full time'>Full time</MenuItem>\n                <MenuItem value='Part time'>Part time</MenuItem>\n                <MenuItem value='Contact'>Contact</MenuItem>\n            </Select>\n          </Grid>\n\n          <Grid item xs={6}>\n            <FilledInput\n              onChange={handleChange}\n              name='companyName'\n              value={jobDetails.companyName}\n              autoComplete='off'\n              fullWidth\n              placeholder='Company name'\n              disableUnderline />\n          </Grid>\n\n          <Grid item xs={6}>\n            <FilledInput\n              onChange={handleChange}\n              name='companyUrl'\n              value={jobDetails.companyUrl}\n              autoComplete='off'\n              fullWidth\n              placeholder='Company URL'\n              disableUnderline />\n          </Grid>\n\n          <Grid item xs={6}>\n            <Select\n              onChange={handleChange}\n              name='location'\n              value={jobDetails.location}\n              fullWidth\n              variant='filled'\n              disableUnderline>\n                <MenuItem value='Remote'>Remote</MenuItem>\n                <MenuItem value='In-office'>In-office</MenuItem>\n            </Select>\n          </Grid>\n\n          <Grid item xs={6}>\n            <FilledInput\n              onChange={handleChange}\n              name='link'\n              value={jobDetails.link}\n              autoComplete='off'\n              fullWidth\n              placeholder='Job Link'\n              disableUnderline />\n          </Grid>\n\n          <Grid item xs={12}>\n            <FilledInput\n              onChange={handleChange}\n              name='description'\n              value={jobDetails.description}\n              autoComplete='off'\n              fullWidth\n              placeholder='Job description'\n              disableUnderline\n              multiline\n              rows={3} />\n          </Grid>\n\n        </Grid>\n        <Box mt={2}>\n          <Typography>Skills</Typography>\n          <Box display='flex'>\n            {skills.map(skill => (\n              <Box onClick={() => addRemoveSkill(skill)} className={`${classes.skillChip} ${jobDetails.skills.includes(skill) && classes.included}`} key={skill}>{skill}</Box>\n            ))}\n          </Box>\n        </Box>\n      </DialogContent>\n      <DialogActions>\n        <Box color='red' width='100%' display='flex' alignItems='center' justifyContent='space-between'>\n          <Typography variant='caption'>Required fields</Typography>\n          <Button\n            disabled={loading}\n            onClick={handleSubmit}\n            variant='contained'\n            disableElevation\n            color='primary'>\n            { loading\n              ?\n              <CircularProgress color='secondary' size={22} />\n              :\n              'Post job'\n            }\n          </Button>\n        </Box>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react';\nimport {\n  CircularProgress,\n  Button,\n  IconButton,\n  makeStyles,\n  Box,\n  Grid,\n  FilledInput,\n  Select,\n  MenuItem,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Typography } from '@material-ui/core';\n  import { Close as CloseIcon } from '@material-ui/icons';\n  import { format } from 'date-fns';\n\n  const useStyles = makeStyles((theme) => ({\n    info: {\n      '& > *': {\n        margin: '4px'\n      }\n    },\n    skillChip: {\n      margin: theme.spacing(0.5),\n      padding: theme.spacing(0.75),\n      fontSize: '14.5px',\n      borderRadius: '5px',\n      fontWeight: 600,\n      backgroundColor: theme.palette.secondary.main,\n      color: '#fff'\n    }\n  }));\n\nexport default props => {\n  const classes = useStyles()\n\n  return (\n    <Dialog open={!!Object.keys(props.job).length} fullWidth>\n      <DialogTitle>\n        <Box display='flex' justifyContent='space-between' alignItems='center'>\n          {props.job.title} @ {props.job.companyName}\n          <IconButton>\n            <CloseIcon onClick={props.closeModal} />\n          </IconButton>\n        </Box>\n      </DialogTitle>\n      <DialogContent>\n        <Box>\n          <Box className={classes.info} display='flex'>\n            <Typography variant='caption'>Posted on</Typography>\n            <Typography variant='caption'>{props.job.postedOn && format(props.job.postedOn, 'dd/MMM/yyyy HH:MM')}</Typography>\n          </Box>\n          <Box className={classes.info} display='flex'>\n            <Typography variant='caption'>Job type</Typography>\n            <Typography variant='caption'>{props.job.type}</Typography>\n          </Box>\n          <Box className={classes.info} display='flex'>\n            <Typography variant='caption'>Job location</Typography>\n            <Typography variant='caption'>{props.job.location}</Typography>\n          </Box>\n          <Box className={classes.info} display='flex'>\n            <Typography variant='caption'>Job description</Typography>\n            <Typography variant='caption'>{props.job.description}</Typography>\n          </Box>\n          <Box className={classes.info} display='flex'>\n            <Typography variant='caption'>Company name</Typography>\n            <Typography variant='caption'>{props.job.companyName}</Typography>\n          </Box>\n          <Box className={classes.info} display='flex'>\n            <Typography variant='caption'>Company website</Typography>\n            <Typography variant='caption'>{props.job.companyUrl}></Typography>\n          </Box>\n          <Box className={classes.info}>\n            <Typography variant='caption'>Skills:</Typography>\n            <Grid container alignItems='center'>\n              {props.job.skills && props.job.skills.map((skill) => (\n                <Grid item key={skill} className={classes.skillChip}>\n                  {skill}\n                </Grid>\n              ))}\n            </Grid>\n          </Box>\n        </Box>\n      </DialogContent>\n      <DialogActions>\n        <Button variant='outlined' component='a' href={props.job.link} target='_blank'>\n          Apply\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import app from 'firebase/app';\nimport 'firebase/firestore';\n\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCwNDhYEsNsihtMeY_Bec3DAGgrch_ieEY\",\n  authDomain: \"job-listing-39005.firebaseapp.com\",\n  projectId: \"job-listing-39005\",\n  storageBucket: \"job-listing-39005.appspot.com\",\n  messagingSenderId: \"1093635462678\",\n  appId: \"1:1093635462678:web:c71ea9a70773ebc90a4737\"\n};\nconst firebase = app.initializeApp(firebaseConfig);\n\nconst firestore = firebase.firestore();\n\n\n\nexport { firebase, firestore, app };\n","import React, { useState, useEffect } from \"react\";\nimport { Close as CloseIcon } from '@material-ui/icons';\nimport { Box, ThemeProvider, Grid, CircularProgress, Button } from \"@material-ui/core\";\nimport theme from './theme/theme';\nimport Header from './components/Header';\nimport SearchBar from './components/SearchBar';\nimport JobCard from './components/Job/JobCard';\nimport NewJobNodal from './components/Job/NewJobModal';\nimport ViewJobModal from './components/Job/ViewJobModal';\nimport { firestore, app } from './firebase/config';\n\nexport default () => {\n  const [ jobs, setJobs ] = useState([]);\n  const [ loading, setLoading ] = useState(true);\n  const [ customSearch, setCustomSearch ] = useState(false)\n  const [ newJobModal, setNewJobModal ] = useState(false);\n  const [ viewJob, setViewJob ] = useState({});\n\n  const fetchJobs = async () => {\n    setCustomSearch(false)\n    setLoading(true)\n    const req = await firestore\n    .collection('jobs')\n    .orderBy('postedOn', 'desc')\n    .get();\n    const tempJobs = req.docs.map((job) => ({...job.data(), id: job.id, postedOn: job.data().postedOn.toDate()}))\n    setJobs(tempJobs);\n    setTimeout(() => setLoading(false), 600)\n  };\n\n  const fetchJobsCustom = async jobSearch =>  {\n    setLoading(true);\n    setCustomSearch(true);\n    const req = await firestore\n    .collection('jobs')\n    .orderBy('postedOn', 'desc')\n    .where('location', '==', jobSearch.location)\n    .where('type', '==', jobSearch.type)\n    .get();\n    const tempJobs = req.docs.map((job) => ({...job.data(), id: job.id, postedOn: job.data().postedOn.toDate()}))\n    setJobs(tempJobs);\n    setTimeout(() => setLoading(false), 600)\n  }\n\n  const postJob = async jobDetails => {\n    await firestore.collection('jobs').add({\n      ...jobDetails,\n      postedOn: app.firestore.FieldValue.serverTimestamp()\n    });\n    fetchJobs();\n  }\n\n  useEffect(() => {\n    fetchJobs();\n  }, [])\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Header openNewJobModal={() => setNewJobModal(true)} />\n      <NewJobNodal\n        closeModal={() => setNewJobModal(false)}\n        newJobModal={newJobModal}\n        postJob={postJob} />\n      <ViewJobModal job={viewJob} closeModal={() => setViewJob({})} />\n      <Box mb={3}>\n        <Grid container justify='center'>\n          <Grid item xs={10}>\n            <SearchBar fetchJobsCustom={fetchJobsCustom} />\n            {\n              loading\n              ?\n                <Box display='flex' justifyContent='center'><CircularProgress /></Box>\n              :\n                <>\n                  { customSearch &&\n                    <Box my={2} display='flex' justifyContent='flex-end'>\n                      <Button onClick={fetchJobs}>\n                        <CloseIcon size={20} />\n                        Custom Search\n                      </Button>\n                    </Box>\n                  }\n                  {jobs.map(job => <JobCard open={() => setViewJob(job)} key={job.id} {...job} />)}\n                </>\n            }\n          </Grid>\n        </Grid>\n      </Box>\n    </ThemeProvider>\n  )\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}